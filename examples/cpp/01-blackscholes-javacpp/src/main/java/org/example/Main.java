package org.example;

import io.deephaven.BlackScholes;

/**
 * Test application demonstrating the JavaCPP Black-Scholes integration.
 * 
 * <p>This simple example shows how to call C++ Black-Scholes functions from Java
 * using the JavaCPP-generated bindings. The {@link BlackScholes} class is automatically
 * generated by JavaCPP from the C++ header file.
 * 
 * <p>The example calculates the price of a European call option with the following parameters:
 * <ul>
 *   <li>Underlying price (S): $100</li>
 *   <li>Strike price (K): $95</li>
 *   <li>Risk-free rate (r): 5% (0.05)</li>
 *   <li>Time to expiry (t): 0.6 years</li>
 *   <li>Volatility (vol): 40% (0.4)</li>
 *   <li>Option type: Call option</li>
 *   <li>Asset type: Option (not stock)</li>
 * </ul>
 */
public class Main {

    /**
     * Main entry point for the test application.
     * 
     * <p>Calls the native C++ Black-Scholes pricing function via JavaCPP bindings
     * and prints the calculated option price.
     * 
     * @param args Command line arguments (not used)
     */
    public static void main(String[] args) {
        final double p = BlackScholes.price(100, 95, 0.05, 0.6, 0.4, true, false);
        System.out.println("Black-Scholes Price: " + p);
    }
}
